version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: summai-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: summai
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: summai-redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    container_name: summai-api
    ports:
      - '3000:3000'
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/summai?schema=public
      REDIS_HOST: redis
      REDIS_PORT: 6379
      PORT: 3000
      NODE_ENV: production
      FRONTEND_URL: http://localhost:3001
      ALLOWED_ORIGINS: http://localhost:3001,http://localhost:3000
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    container_name: summai-web
    ports:
      - '3001:3001'
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3000
    depends_on:
      - api
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
