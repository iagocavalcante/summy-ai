name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint-and-type-check:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: pnpm lint

      - name: Type check
        run: pnpm build

  build-docker:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build API
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/api/Dockerfile
          push: false
          tags: summai-api:latest

      - name: Build Web
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/web/Dockerfile
          push: false
          tags: summai-web:latest

  deploy-api:
    runs-on: ubuntu-latest
    needs: [lint-and-type-check, build-docker]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - uses: actions/checkout@v4

      - name: Setup Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Run database migrations
        run: |
          flyctl ssh console -a summ-ai-api -C "node -e \"const { drizzle } = require('drizzle-orm/postgres-js'); const postgres = require('postgres'); const { migrate } = require('drizzle-orm/postgres-js/migrator'); const sql = postgres(process.env.DATABASE_URL); const db = drizzle(sql); migrate(db, { migrationsFolder: '/app/drizzle' }).then(() => console.log('Migrations complete')).catch(err => { console.error('Migration error:', err); process.exit(1); }).finally(() => sql.end());\""
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Deploy API to Fly.io
        run: flyctl deploy --config apps/api/fly.toml -a summ-ai-api --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  deploy-web:
    runs-on: ubuntu-latest
    needs: [lint-and-type-check, build-docker]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - uses: actions/checkout@v4

      - name: Setup Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy Web to Fly.io
        run: flyctl deploy --config apps/web/fly.toml -a summ-ai-web --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
